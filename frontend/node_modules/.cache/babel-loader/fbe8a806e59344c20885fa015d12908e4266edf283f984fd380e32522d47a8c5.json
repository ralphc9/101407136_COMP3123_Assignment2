{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'../services/api';// Import Axios instance\nimport{useParams,useNavigate}from'react-router-dom';// For handling route params and redirection\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditEmployee=()=>{const{id}=useParams();// Get the employee ID from the URL\nconst history=useNavigate();// To redirect after the update\nconst[firstName,setFirstName]=useState('');const[lastName,setLastName]=useState('');const[position,setPosition]=useState('');const[department,setDepartment]=useState('');const[error,setError]=useState('');// Fetch the employee data when the component loads\nuseEffect(()=>{const fetchEmployee=async()=>{try{const response=await axios.get(`/emp/employees/${id}`);const{first_name,last_name,position,department}=response.data;setFirstName(first_name);setLastName(last_name);setPosition(position);setDepartment(department);}catch(err){setError('Error fetching employee data.');}};fetchEmployee();},[id]);const handleEditEmployee=async e=>{e.preventDefault();try{await axios.put(`/emp/employees/${id}`,{first_name:firstName,last_name:lastName,position,department});alert('Employee updated successfully!');history.push('/employees');// Redirect to the employee list after successful update\n}catch(err){setError('Error updating employee.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Employee\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleEditEmployee,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"First Name\",value:firstName,onChange:e=>setFirstName(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Last Name\",value:lastName,onChange:e=>setLastName(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Position\",value:position,onChange:e=>setPosition(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Department\",value:department,onChange:e=>setDepartment(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update Employee\"})]})]});};export default EditEmployee;","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","EditEmployee","id","history","firstName","setFirstName","lastName","setLastName","position","setPosition","department","setDepartment","error","setError","fetchEmployee","response","get","first_name","last_name","data","err","handleEditEmployee","e","preventDefault","put","alert","push","children","onSubmit","type","placeholder","value","onChange","target"],"sources":["C:/Users/cnlsr/101407136_COMP3123_Assignment2/frontend/src/components/EditEmployee.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../services/api'; // Import Axios instance\r\nimport { useParams, useNavigate } from 'react-router-dom'; // For handling route params and redirection\r\n\r\nconst EditEmployee = () => {\r\n  const { id } = useParams(); // Get the employee ID from the URL\r\n  const history = useNavigate(); // To redirect after the update\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [position, setPosition] = useState('');\r\n  const [department, setDepartment] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch the employee data when the component loads\r\n  useEffect(() => {\r\n    const fetchEmployee = async () => {\r\n      try {\r\n        const response = await axios.get(`/emp/employees/${id}`);\r\n        const { first_name, last_name, position, department } = response.data;\r\n        setFirstName(first_name);\r\n        setLastName(last_name);\r\n        setPosition(position);\r\n        setDepartment(department);\r\n      } catch (err) {\r\n        setError('Error fetching employee data.');\r\n      }\r\n    };\r\n\r\n    fetchEmployee();\r\n  }, [id]);\r\n\r\n  const handleEditEmployee = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.put(`/emp/employees/${id}`, {\r\n        first_name: firstName,\r\n        last_name: lastName,\r\n        position,\r\n        department\r\n      });\r\n      alert('Employee updated successfully!');\r\n      history.push('/employees'); // Redirect to the employee list after successful update\r\n    } catch (err) {\r\n      setError('Error updating employee.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Employee</h2>\r\n      {error && <p>{error}</p>}\r\n      <form onSubmit={handleEditEmployee}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"First Name\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Last Name\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Position\"\r\n          value={position}\r\n          onChange={(e) => setPosition(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Department\"\r\n          value={department}\r\n          onChange={(e) => setDepartment(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Update Employee</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditEmployee;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}